<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelBorder.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJ0AAACYCAYAAAD+6+tlAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAF+SURBVHhe7dQxCoMAFERB738e75eQwiJIOnmBZQYEv7aP
        PeBvzvN8XY/b/fR98/MHPOirM9FREB2wz9KREx050QH7LB050ZETHbDP0pETHTnRAfssHTnRkRMdsM/S
        kRMdOdEB+ywdOdGREx2wz9KREx050QH7LB050ZETHbDP0pETHTnRAfssHTnRkRMdsM/SkRMdOdEB+ywd
        OdGREx2wz9KREx050QH7LB050ZETHbDP0pETHTnRAfssHTnRkRMdsM/SkRMdOdEB+ywdOdGREx2wz9KR
        Ex050QH7LB050ZETHbDP0pETHTnRAfssHTnRkRMdsM/SkRMdOdEB+ywdOdGREx2wz9KREx050QH7LB05
        0ZETHbDP0pETHTnRAfssHTnRkRMdsM/SkRMdOdEB+ywdOdGREx2wz9KREx050QH7LB050ZETHbDP0pET
        HTnRAfssHTnRkRMdsM/SkRMdOdEB+ywdOdGREx2w7zZunw/Xx+vd7X7y/rzDHxzHGysTeN0sbU1iAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="pictureChecked.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>